Перем КонтекстЯдра;
Перем Ожидаем;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	НаборТестов.НачатьГруппу("Тесты проверки email");
 	НаборТестов.Добавить("ТестДолжен_ПроверитьВалидныйEmail", , "ФУНК_ПЕ_001. Позитивный тест. валидный email");
    НаборТестов.Добавить("ТестДолжен_ПроверитьКорректныйEmail", , "ФУНК_ПЕ_002. Позитивный тест. корректный email");
    НаборТестов.Добавить("ТестДолжен_ПроверитьНекорректныйEmail", , "ФУНК_ПЕ_003. Негативный тест. некорректный email");
    НаборТестов.Добавить("ТестДолжен_ПроверитьПустойEmail", , "ФУНК_ПЕ_004. Негативный тест. пустой email");
    НаборТестов.Добавить("ТестДолжен_ПроверитьEmailБезДоменнойЗоны", , "ФУНК_ПЕ_005. Негативный тест. email без доменной зоны");
    НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСПробелами", , "ФУНК_ПЕ_006. Негативный тест. email с пробелами");
    НаборТестов.Добавить("ТестДолжен_ПроверитьEmailБезСобачки", , "ФУНК_ПЕ_007. Негативный тест. email без символа @");
    НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСНесколькимиСобачками", , "ФУНК_ПЕ_008. Негативный тест. email с несколькими символами @");
    НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСПустымЛогином", , "ФУНК_ПЕ_009. Негативный тест. email с пустым логином");
    НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСПустымДоменом", , "ФУНК_ПЕ_010. Негативный тест. email с пустым доменом");
	НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСВерхнимРегистром", , "ФУНК_ПЕ_011. Позитивный тест. email в верхнем регистре");
	НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСмешаннымРегистром", , "ФУНК_ПЕ_012. Позитивный тест. email в смешанном регистре");
	НаборТестов.Добавить("ТестДолжен_ПроверитьEmailСКирилицей", , "ФУНК_ПЕ_013. Позитивный тест. email с кирилицей");
	НаборТестов.Добавить("ТестДолжен_ПроверитьEmailССпецсимволомПлюс", , "ФУНК_ПЕ_014. Позитивный тест. email с спецсимволом + ");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьВалидныйEmail() Экспорт
	АдресЭлектроннойПочты = "nikitagordeev10@yandex.ru";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоИстина();
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьКорректныйEmail() Экспорт
	АдресЭлектроннойПочты = "test@example.com";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоИстина();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНекорректныйEmail() Экспорт
	АдресЭлектроннойПочты = "test@example";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПустойEmail() Экспорт
	АдресЭлектроннойПочты = "";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailБезДоменнойЗоны() Экспорт
	АдресЭлектроннойПочты = "test@.com";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСПробелами() Экспорт
	АдресЭлектроннойПочты = "test @example.com";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailБезСобачки() Экспорт
	АдресЭлектроннойПочты = "testexample.com";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСНесколькимиСобачками() Экспорт
	АдресЭлектроннойПочты = "test@@example.com";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСПустымЛогином() Экспорт
	АдресЭлектроннойПочты = "@example.com";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСПустымДоменом() Экспорт
	АдресЭлектроннойПочты = "test@";
	Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
	Ожидаем.Что(Результат).ЭтоЛожь();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСВерхнимРегистром() Экспорт
    АдресЭлектроннойПочты = "TEST@EXAMPLE.COM";
    Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
    Ожидаем.Что(Результат).ЭтоИстина();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСмешаннымРегистром() Экспорт
    АдресЭлектроннойПочты = "Test@Example.Com";
    Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
    Ожидаем.Что(Результат).ЭтоИстина();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailССпецсимволомПлюс() Экспорт
    АдресЭлектроннойПочты = "test+special@example.com";
    Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
    Ожидаем.Что(Результат).ЭтоИстина();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьEmailСКирилицей() Экспорт
    АдресЭлектроннойПочты = "test@пример.рф";
    Результат = РаботаСоСправочникамиСервер.ПроверитьEmail(АдресЭлектроннойПочты);
    Ожидаем.Что(Результат).ЭтоИстина();
КонецПроцедуры
